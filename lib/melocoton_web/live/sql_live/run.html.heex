<div class="h-screen w-screen flex flex-col">
  <div class="bg-app-menubar-light dark:bg-app-menubar-dark border-b border-app-border-light dark:border-app-border-dark flex text-xs px-2 select-none h-7 items-center dark-transition">
    <!-- Environment Indicator -->
    <div class="flex items-center pr-2 border-r border-app-border-light dark:border-app-border-dark mr-2">
      <div class={[
        "w-2 h-2 rounded-full mr-1.5 env-indicator-production",
        "bg-[#{@database.group.color}]"
      ]}>
      </div>
      <span class={["font-medium uppercase", "text-[#{@database.group.color}]"]}>
        {@database.group.name}
      </span>
    </div>

    <div
      class="px-2 py-1 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer"
      phx-click={JS.patch(~p"/databases")}
    >
      Home
    </div>
    <div class="px-2 py-1 hover:bg-black/10 dark:hover:bg-white/10">Edit</div>
    <div class="px-2 py-1 hover:bg-black/10 dark:hover:bg-white/10">View</div>
    <div class="px-2 py-1 hover:bg-black/10 dark:hover:bg-white/10">Query</div>
    <div class="px-2 py-1 hover:bg-black/10 dark:hover:bg-white/10">Tools</div>
    <div class="px-2 py-1 hover:bg-black/10 dark:hover:bg-white/10">Help</div>
    <!-- Spacer -->
    <div class="flex-1"></div>
    <!-- Database Name with Environment Color -->
    <div class="px-2 py-1 mr-2 flex items-center uppercase ">
      <i class={["fas fa-database mr-1.5", "text-[#{@database.group.color}]"]}></i>
      <span>{@database.group.name}</span>
    </div>

    <button id="theme-toggle" class="p-1 text-sm hover:bg-black/10 dark:hover:bg-white/10 rounded">
      <i class="fas fa-moon dark:hidden"></i>
      <i class="fas fa-sun hidden dark:block"></i>
    </button>
  </div>

  <div class="flex-1 flex overflow-hidden">
    <aside class="w-56  bg-app-sidebar-light dark:bg-app-sidebar-dark border-r border-app-border-light dark:border-app-border-dark flex flex-col dark-transition">
      <div class="p-2 border-b border-app-border-light dark:border-app-border-dark flex items-center justify-between dark-transition">
        <div class="flex items-center">
          <div class={["w-2 h-2 rounded-full mr-1.5", "bg-[#{@database.group.color}]"]}></div>
          <div class="text-xs font-medium flex items-center">
            <i class="fas fa-database text-blue-500 mr-1.5"></i>
            <span>{@database.name}</span>
          </div>
        </div>
        <button
          class="text-xs hover:bg-black/10 dark:hover:bg-white/10 p-1 rounded"
          phx-click="reload-objects"
        >
          <i class="fas fa-sync-alt"></i>
        </button>
      </div>

      <div class="p-2 border-b border-app-border-light dark:border-app-border-dark dark-transition">
        <div class="relative">
          <.form for={@search_form} phx-change="validate-search">
            <.input
              type="text"
              field={@search_form[:term]}
              placeholder="Search database objects..."
            />
          </.form>

          <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
            <i class="fas fa-search text-gray-400 text-[10px]"></i>
          </div>
        </div>
      </div>

      <div class="overflow-y-auto overscroll-none flex-1 p-1">
        <div class="p-2 border-b border-app-border-light dark:border-app-border-dark dark-transition">
          <div class="flex items-center justify-between cursor-pointer" data-toggle="tables">
            <div class="text-xs font-medium">Tables</div>
            <i class="fas fa-chevron-down text-[10px]"></i>
          </div>
          <.async_result :let={tables} assign={@tables}>
            <:loading></:loading>

            <:failed :let={failure}>{"#{inspect(failure)}"}</:failed>
            <div
              :for={table <- tables}
              :if={
                @search_term &&
                  (String.contains?(table.name, @search_term) ||
                     Enum.any?(table.cols, &String.contains?(&1.name, @search_term)))
              }
              class="mt-1 text-xs"
            >
              <div class="flex items-center p-1 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer">
                <i class="fas fa-table mr-1.5 text-blue-500"></i>
                <span>{table.name}</span>
                <i class="fas fa-chevron-down ml-auto text-[10px]"></i>
              </div>

              <ul class="pl-4 mt-0.5">
                <li
                  :for={col <- table.cols}
                  :if={@search_term && String.contains?(col.name, @search_term)}
                  class="flex items-center p-1 hover:bg-black/10 dark:hover:bg-white/10"
                >
                  <i class="fas fa-font mr-1.5 text-purple-600 dark:text-purple-500 text-[10px]">
                  </i>
                  <span>{col.name} ({col.type})</span>
                </li>
              </ul>
            </div>
          </.async_result>
        </div>
        <div class="p-2 border-b border-app-border-light dark:border-app-border-dark dark-transition">
          <div class="flex items-center justify-between cursor-pointer" data-toggle="indexes">
            <div class="text-xs font-medium">Indexes</div>
            <i class="fas fa-chevron-down text-[10px]"></i>
          </div>
          <div id="indexes-content" class="mt-1 text-xs">
            <.async_result :let={indexes} assign={@indexes}>
              <:loading></:loading>

              <:failed :let={failure}>{"#{inspect(failure)}"}</:failed>
              <div
                :for={index <- indexes}
                :if={@search_term && String.contains?(index.name, @search_term)}
                class="flex items-center p-1 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer"
              >
                <i class="fas fa-key mr-1.5 text-amber-500"></i>
                <span>{index.name}</span>
                <span class="ml-1 text-[9px] text-gray-500 dark:text-gray-400">
                  ({index.table})
                </span>
              </div>
            </.async_result>
          </div>
        </div>
      </div>
      <div class="p-2 border-t border-app-border-light dark:border-app-border-dark text-[10px] text-gray-500 dark:text-gray-400 dark-transition">
        <div class="flex items-center">
          <div class={["w-1.5 h-1.5 rounded-full mr-1.5", "bg-[#{@database.group.color}]"]}></div>
          <span>
            Connected to
            <span class={"uppercase text-[#{@database.group.color}]"}>
              {@database.group.name}
            </span>
          </span>
        </div>
      </div>
    </aside>
    
<!-- Main Content Area -->
    <main class="flex-1 flex flex-col overflow-hidden bg-app-content-light dark:bg-app-content-dark dark-transition">
      <!-- Tabs with Environment Color -->
      <div class="border-b border-app-border-light dark:border-app-border-dark flex text-xs dark-transition">
        <div
          :for={{session, index} <- Enum.with_index(@database.sessions, 1)}
          class={[
            "px-3 py-1.5 bg-white dark:bg-gray-800 border-r border-app-border-light dark:border-app-border-dark flex items-center dark-transition",
            @current_session.id == session.id && "border-t-2"
          ]}
          phx-click="change-session"
          phx-value-session-id={session.id}
          style={"border-top-color: #{@database.group.color};"}
        >
          <span>#{index}</span>
          <button class="ml-2 hover:bg-black/10 dark:hover:bg-white/10 rounded p-0.5">
            <i class="fas fa-times text-[10px]"></i>
          </button>
        </div>
        <button
          class="px-3 py-1.5 hover:bg-black/10 dark:hover:bg-white/10"
          phx-click="new-session"
        >
          <i class="fas fa-plus text-[10px]"></i>
        </button>
      </div>
      
<!-- Editor Area with Environment Color -->
      <div class="flex-1 flex flex-col overflow-hidden">
        <!-- SQL Editor -->
        <div class="p-2 flex-1 flex flex-col min-h-0">
          <div class="flex justify-between items-center mb-1">
            <div class="text-xs font-medium flex items-center">
              <span>SQL Editor</span>
              <span class={[
                "ml-2 px-1.5 py-0.5 uppercase text-white text-[10px] rounded-sm font-medium",
                "bg-[#{@database.group.color}]"
              ]}>
                {@database.group.name}
              </span>
            </div>
            <div class="flex space-x-1">
              <button
                :if={@running_transaction?}
                class="px-2 py-1 text-xs bg-transaction-active-light text-transaction-active rounded hover:bg-transaction-active-medium flex items-center mr-2 transaction-pulse bg-transaction-active-light text-transaction-active transaction-pulse"
              >
                <i class="fas fa-exchange-alt mr-1.5"></i> Transaction Active
              </button>
              <button class="px-2 py-0.5 text-xs bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 dark-transition">
                Format
              </button>
              <button
                class={[
                  "px-2 py-0.5 text-xs text-white flex items-center",
                  "bg-[#{@database.group.color}]",
                  "hover:bg-[#{@database.group.color}]/90"
                ]}
                phx-click="run-query"
                phx-value-query={@current_session.query}
              >
                <i class="fas fa-play mr-1 text-[10px]"></i> Run
              </button>
              <a
                :if={@result.rows != []}
                class="px-2 py-0.5 text-xs bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 dark-transition"
                href={~p"/export-csv/#{inspect(@pid)}"}
                class="px-4 py-2 mx-2 my-2 outline outline-2"
                target="blank"
              >
                <i class="fas fa-file-csv mr-1 text-[10px]"></i> Export CSV
              </a>
            </div>
          </div>
          <div class="flex-1 border border-app-border-light dark:border-app-border-dark overflow-hidden dark-transition relative">
            <!-- Environment Border Indicator -->
            <div class={["absolute inset-y-0 left-0 w-1", "bg-[#{@database.group.color}]"]}></div>

            <div
              id="editor"
              phx-update="ignore"
              class="w-full h-full p-2 pl-3 font-mono text-xs bg-app-editor-light dark:bg-app-editor-dark focus:outline-none dark-transition"
            >
            </div>

            <.form for={@form} phx-change="validate">
              <.input
                type="textarea"
                field={@form[:query]}
                rows="10"
                style="display: none"
                id="query-textarea"
                phx-hook="SQLEditor"
              />
            </.form>
          </div>
        </div>

        <div class="border-t border-app-border-light dark:border-app-border-dark flex flex-col h-2/5 overflow-hidden dark-transition">
          <div class="flex border-b border-app-border-light dark:border-app-border-dark text-xs dark-transition">
            <div
              class={[
                "px-3 py-1 bg-white dark:bg-gray-800 dark-transition",
                @result != [] && "border-b-2"
              ]}
              style={"border-bottom-color: #{@database.group.color};"}
            >
              {gettext("Results")}
            </div>
            <div class={[
              "px-3 py-1 border-b-2 border-transparent",
              !is_nil(@error_message) && "border-b-2"
            ]}>
              Messages
            </div>
            <div class="px-3 py-1 border-b-2 border-transparent">
              Query History
            </div>
          </div>
          <div
            :if={@result != [] and is_nil(@error_message)}
            class="overflow-auto overscroll-none flex-1 p-0"
          >
            <div class="overflow-x-auto">
              <table class="w-full border-collapse text-xs">
                <thead>
                  <tr class="bg-gray-100 dark:bg-gray-800 dark-transition">
                    <th
                      :for={col <- @result.cols}
                      class="border border-app-border-light dark:border-app-border-dark px-2 py-1 text-left font-medium dark-transition"
                    >
                      {col}
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr :for={row <- @result.rows}>
                    <td
                      :for={col <- @result.cols}
                      class="border border-app-border-light dark:border-app-border-dark px-2 py-1 whitespace-nowrap dark-transition"
                    >
                      {Map.get(row, col)}
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>

          <div
            :if={!is_nil(@error_message)}
            class="border border-red-300 dark:border-red-800 bg-red-50 dark:bg-red-900/20 p-2 m-2 text-xs rounded dark-transition"
          >
            <div class="flex">
              <div class="flex-shrink-0 text-red-500">
                <i class="fas fa-exclamation-circle"></i>
              </div>
              <div class="ml-2">
                <p class="text-red-700 dark:text-red-400 font-medium">
                  {@error_message}
                </p>
                <p class="text-gray-500 dark:text-gray-400 mt-1 text-[10px]">
                  Position: 1-5 • Error code: 42601
                </p>
              </div>
            </div>
          </div>

          <div class={[
            "border-t border-app-border-light dark:border-app-border-dark p-1 text-[10px] text-gray-500 dark:text-gray-400 flex justify-between dark-transition text-white",
            "bg-[#{@database.group.color}]"
          ]}>
            <div class="text-white">{@result.num_rows} rows returned in 0.012s</div>
            <div class="flex items-center text-white">
              <div class="w-1.5 h-1.5 rounded-full bg-white mr-1.5"></div>
              <span class="font-medium uppercase">{@database.group.name}</span>
              @ prod-server:5432
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>
</div>
